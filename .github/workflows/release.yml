name: kong-wallet-jwt Binary Release

on:
  release:
    types: # This configuration does not affect the page_build event above
      - created

jobs:
  build_init:
    runs-on: ubuntu-latest
    name: Build Init
    steps:
      - id: version
        run: echo "::set-output name=version::${GITHUB_REF##*/}"
    outputs:
      version: ${{ steps.version.outputs.version }}
      go_version: "1.17"

  build_osx:
    runs-on: macos-latest
    needs:
      - build_init
    name: Build OSX
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install osx tools
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon
      - name: Setup go
        uses: actions/setup-go@v2.2.0
        with:
          go-version: ${{ needs.build_init.outputs.go_version }}
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CODESIGNING_P12_BASE64 }}
          p12-password: ${{ secrets.CODESIGNING_P12_PASSWORD }}
      - name: Build osx binary
        run: |
          make release
      - name: Sign the mac binaries with Gon
        env:
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
        run: |
          gon -log-level=info -log-json ./gon.json
      - uses: actions/upload-artifact@v3
        with:
          name: osx-zip
          path: build/*.zip

  build_linux:
    runs-on: ubuntu-latest
    needs:
      - build_init
    name: Build Linux
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v2.2.0
        with:
          go-version: ${{ needs.build_init.outputs.go_version }}
      - name: Build linux binary
        run: |
          make release linux-release
      - uses: actions/upload-artifact@v3
        with:
          name: linux-zip
          path: build/*.zip

  create_release:
    runs-on: ubuntu-latest
    needs:
      - build_init
      - build_osx
      - build_linux
    name: Create Release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create release ${{ needs.build_init.outputs.version }}
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: RELEASE_CHANGELOG.md
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

  update_release:
    runs-on: ubuntu-latest
    needs:
      - build_init
      - create_release
    name: Attach Release Artifacts
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup go
        uses: actions/setup-go@v2.2.0
        with:
          go-version: ${{ needs.build_init.outputs.go_version }}
      -
        name: Download linux zip artifact
        uses: actions/download-artifact@v2
        with:
          name: linux-zip
          path: build/
      -
        name: Download osx zip artifact
        uses: actions/download-artifact@v2
        with:
          name: osx-zip
          path: build/
      -
        name: Upload osx zip artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_url }}
          asset_path: ./build/jwt-wallet-darwin-amd64-${{ needs.build_init.outputs.version }}.zip
          asset_name: jwt-wallet-darwin-amd64-${{ needs.build_init.outputs.version }}.zip
          asset_content_type: application/octet-stream
      -
        name: Upload linux zip artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_url }}
          asset_path: ./build/jwt-wallet-linux-amd64-${{ needs.build_init.outputs.version }}.zip
          asset_name: jwt-wallet-linux-amd64-${{ needs.build_init.outputs.version }}.zip
          asset_content_type: application/octet-stream